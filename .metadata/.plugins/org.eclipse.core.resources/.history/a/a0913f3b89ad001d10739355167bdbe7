package com.javastack.spring.mvc.controllers;

//import antlr.collections.List;
import java.util.List;

import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import com.javastack.spring.mvc.models.Book;
import com.javastack.spring.mvc.services.BookService;

@Controller
@RequestMapping("/books")
public class HomeController {

	//service dependency
	@Autowired
	private BookService bookService;
	
	//return all books
	@GetMapping("/dashboard")
	public String returnAllBooks(Model model) {
		List<Book> listOfAllBooks = bookService.returnAllBooks();
		model.addAttribute("allBooks", listOfAllBooks);
		return "Dashboard.jsp";
	}
	
	//Get a single book
	@GetMapping("/{id}")
	public String returnSingleBook(@PathVariable("id") Long id, Model model) {
		Book book = bookService.findBook(id);
		model.addAttribute("book", book);
		return "bookDetails.jsp";
	}
	
	// Post without data binding
		// Show the form page
		@GetMapping("/new")
		public String showBookForm() {
			return "bookForm.jsp";
		}
	
	//Show the form page
	@PostMapping("/new")
	public String create(@RequestParam(value = "title") String title, @RequestParam(value = "description") String desc, @RequestParam(value = "language") String lang, @RequestParam(value = "numberOfPages") Long numberOfPages){ 
	Book book = new Book(title, desc, lang, numberOfPages);
	bookService.createBook(book);
	return "redirect:/books/dashboard";
	//process the form
	
	//show the results after submission
	}
	
	@GetMapping("/databinding/new")
	public String showDatabindingForm(@ModelAttribute("book") Book book) {
//		Book emptyObject = new Book();
//		model.addAttribute("book", emptyObject.setLanguage("Igbo"));
//		book.setLanguage("French");
//		book.setTitle("Simbi goes to school"); these set default values
		return "databindingForm.jsp";
	}
	
	@PostMapping("/databinding/new")
	public String processDataBindingForm(@Valid @ModelAttribute("book") Book book, BindingResult result) {
		
		if(result.hasErrors()) {
			return "databindingForm.jsp";
		} else {
			bookService.createBook(book);
		}
		return "redirect:/dashboard";
	}
	//-----------------usingdatabinding----------------
	@GetMapping("/binding/edit/{id}")
	public String showEditForm(@PathVariable("id") Long id, Model model) {
		Book bookFound = bookService.findBook(id);
		model.addAttribute("book", bookFound);
		return "editBookForm.jsp";
	}
	//process edit form using data binding
	@PutMapping("/binding/edit/{id}")
	public String editBook(@Valid @ModelAttribute("book") Book book, BindingResult result) {
	if(result.hasErrors()) {
		return "editBookForm.jsp";
		} else {
		bookService.createBook(book);
		return"redirect:/dashboard";
		}
	}
	
	@DeleteMapping("/delete/{id}")
		public String deleteBook(@PathVariable("id") Long id) {
		bookService.deleteById(id);
		return"redirect:/dashboard";
		}
	//-----------advanced queries------------
	@GetMapping("/other")
	public String returnSomeBookBasedOnSearchTerm(@RequestParam(value="q", required = false)String search, Model model) {
		model.addAttribute("allBooks", bookService.returnBookByLanguageContaining());
		return "Dashboard.jsp";
	}
	}
